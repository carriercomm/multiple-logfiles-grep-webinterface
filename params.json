{"name":"Multiple-logfiles-grep-webinterface","tagline":"deadsimple phpfile which allows grepping on logfiles using a browser (handy for collegues e.g.)","body":"multiple-logfiles-grep-webinterface\r\n===================================\r\n\r\ndeadsimple phpfile which allows grepping on logfiles using a browser (handy for collegues e.g.)\r\n\r\n<img alt=\"\" src=\"https://raw.githubusercontent.com/coderofsalvation/multiple-logfiles-grep-webinterface/master/log/screenshot.png\"/>\r\n\r\n## Why\r\n\r\nTo prevent developers becoming a middle-man-for-support.\r\n\r\n## But Why?\r\n\r\nSometimes there's no budget/time for developers to move their logfiles to something more robust (logging webservices e.g.), \r\nand/or to create email notifications for (many times unknown) situations.\r\nLogging to a file, however is usually the 'poor mans'-history for developers.\r\n\r\n## How to use it?\r\n\r\nEasy:\r\n\r\n* Put the files into your rootdirectory\r\n* change the 'login' and 'password' in `log.php`\r\n* point to the appropriate logfiles in `cli/greplogs`\r\n* point collegues to https://yourdomain.com/log.php\r\n* ask them to disturb you *after* checkin the logs\r\n\r\nVoila!\r\n\r\n## Tip\r\n\r\nuse php's syslog() instead of writing to a file, because:\r\n\r\n* it ends up in /var/log/messages\r\n* it automatically rotates your files\r\n* it allows you to trigger email notifications upon certain stringpatterns\r\n* it's reliable (files are not, think race-conditions e.g.)\r\n\r\nEventually you can look in to online logging tools if the volumes become huge.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}